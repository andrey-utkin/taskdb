#!/usr/bin/env python3

import os
import sys
import subprocess
import parse
import datetime
import dateutil.parser
import pytz
import psycopg2
import psycopg2.extras


# Fetch external updates
calendar = 'fb9ed04e-572b-477f-bdad-d6dbb32c0d82'
calendar_prefix = 'fastmail_calendar/'

child = subprocess.Popen(['/usr/bin/vdirsyncer', 'sync', calendar_prefix + calendar])
child.wait()

conn = psycopg2.connect("dbname=j user=j")
cur = conn.cursor(cursor_factory=psycopg2.extras.DictCursor)
cur.execute("PREPARE QUERY AS SELECT scheduled, description FROM tasks WHERE uuid = $1");
cur.execute("PREPARE UPD AS UPDATE tasks SET scheduled = $2, description = $3 WHERE uuid = $1");

# List
result = subprocess.run("khal list --include-calendar fb9ed04e-572b-477f-bdad-d6dbb32c0d82 -o -f 'UID {uid} START {start} TITLE {title}' 2018-01-01 2020-01-01 | grep ^UID", shell=True, check=True, stdout=subprocess.PIPE)
output = result.stdout.decode("utf-8")
#print(output)
for line in output.splitlines():
    print(line)
    uid, scheduled, description = parse.parse("UID {} START {} TITLE {}", line)
    print(uid)
    print(scheduled)
    # Relies on timestamps being printed in timezone-aware format.
    # Use this in your ~/.config/khal/config:
    # datetimeformat = %Y-%m-%d %H:%M %z
    scheduled = dateutil.parser.parse(scheduled)
    print(scheduled.isoformat())
    print(description)

    cur.execute("EXECUTE QUERY (%s)", (uid,))
    row = cur.fetchone()
    if not row:
        continue
    changed = False
    if row['description'] != description:
        changed = True
        print("Description was externally modified")
        print(row['description'])
    if row['scheduled'] != scheduled:
        changed = True
        print("Scheduled datetime was externally modified")
        print(row['scheduled'].isoformat())

    if not changed:
        continue

    # update DB entries
    cur.execute("EXECUTE UPD (%s, %s, %s)", (uid, scheduled, description))
conn.commit()
